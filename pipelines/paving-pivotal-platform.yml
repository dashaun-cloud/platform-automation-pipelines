---

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest
- name: semver-config
  type: docker-image
  source:
    repository: itstarting/semver-config-concourse-resource
    tag: 1.1.0

# reusable stuff
credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  input_mapping:
    files: configuration
  params:
    CREDHUB_SERVER: ((credhub.server))
    CREDHUB_CA_CERT: ((credhub.ca_cert))
    CREDHUB_CLIENT: ((credhub.client))
    CREDHUB_SECRET: ((credhub.secret))
    PREFIX: /concourse/((foundation))
    INTERPOLATION_PATHS: ((credhub.interpolate_folders))

resources:
- name: configuration
  type: git
  source:
    private_key: ((git.private_key))
    username: ((git.user.username))
    password: ((git.user.password))
    uri: ((git.configuration.uri))
    branch: master
- name: paving
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal/paving.git
    private_key: ((git_ssh_key))
- name: terraform
  type: terraform
  source:
    env_name: ((foundation))
    backend_type: gcs
    backend_config:
      bucket: terraform-state-dashaun-cloud
      prefix: ((foundation))
      credentials: ((gcp_credentials_json))
    delete_on_failure: true
    vars:
      environment_name: ((foundation))
      region: ((region))
      dns_suffix: ((dns_suffix))
      hosted_zone: ((hosted_zone))
      availability_zones: ((availability_zones))
      access_key: ((access_key))
      secret_key: ((secret_key))
      project: ((project))
      service_account_key: ((gcp_credentials_json))
      ssl_certificate: ((acme_cert.certificate))
      ssl_private_key: ((acme_cert.private_key))
jobs:
- name: paving-apply
  plan:
  - get: paving
    trigger: false
  - put: terraform
    params:
      env_name: ((foundation))
      terraform_source: paving/((iaas))
- name: store-tfstate-in-credhub
  plan:
  - get: terraform
    trigger: true
    passed: [paving-apply]
  - task: store-tfstate
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: governmentpaas/bosh-cli-v2
          tag: latest
      inputs:
        - name: terraform
      params:
        CH_USER: ((credhub_username))
        CH_PASS: ((credhub_password))
        CH_URL: ((credhub_url))
        CH_CA: ((credhub_ca_cert))
      run:
        path: bash
        args:
          - -c
          - |
            credhub login --client-name="$CH_USER" --client-secret="$CH_PASS" -s "$CH_URL" --ca-cert="$CH_CA"
            credhub delete -n /concourse/((foundation))/tfstate
            credhub set -n /concourse/((foundation))/tfstate -t value -v "$(cat terraform/metadata)"
  - task: expand-tfstate-keys
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: governmentpaas/bosh-cli-v2
          tag: latest
      inputs:
        - name: terraform
      params:
        CH_USER: ((credhub_username))
        CH_PASS: ((credhub_password))
        CH_URL: ((credhub_url))
        CH_CA: ((credhub_ca_cert))
      run:
        path: bash
        args:
          - -c
          - |
            credhub login --client-name="$CH_USER" --client-secret="$CH_PASS" -s "$CH_URL" --ca-cert="$CH_CA"
            apt-get update -qq -y
            apt-get install jq -qq -y
            credhub get -n /concourse/((foundation))/tfstate -j | jq -r .value | jq -r .stable_config >> stable_config.json
            cat "stable_config.json" | jq -r '. | keys[]' |
            while IFS= read -r value; do
                credhub delete -n "/concourse/((foundation))/tf_$value"
                credhub set -n "/concourse/((foundation))/tf_$value" -t value -v "$(cat stable_config.json | jq -r .$value | sed 's/\.$//' )"
            done
  - task: expand-tfstate-keys-with-arrays
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: governmentpaas/bosh-cli-v2
          tag: latest
      inputs:
      - name: terraform
      params:
        CH_USER: ((credhub_username))
        CH_PASS: ((credhub_password))
        CH_URL: ((credhub_url))
        CH_CA: ((credhub_ca_cert))
      run:
        path: bash
        args:
          - -c
          - |
            credhub login --client-name="$CH_USER" --client-secret="$CH_PASS" -s "$CH_URL" --ca-cert="$CH_CA"
            apt-get update -qq -y
            apt-get install jq -qq -y
            credhub get -n /concourse/((foundation))/tfstate -j | jq -r .value | jq -r .stable_config >> stable_config.json
            cat "stable_config.json" | jq -r '. | keys[]' |
            while IFS= read -r value; do
                KEY=$value
                CH_PATH="/concourse/((foundation))/tf_$KEY"
                VAL="$(credhub get -n $CH_PATH -j | jq -r .value)"
                COUNTER=0
                for row in $(echo "$VAL" | jq -r .[] 2> /dev/null); do
                    credhub delete -n "$CH_PATH"_"$COUNTER"
                    credhub set -n "$CH_PATH"_"$COUNTER" -t value -v "$row"
                    let COUNTER=COUNTER+1
                done
            done

- name: paving-destroy
  plan:
  - get: configuration
  - get: paving
    trigger: false
  - put: terraform
    get_params:
      action: destroy
    params:
      action: destroy
      env_name: ((foundation))
      terraform_source: paving/((iaas))