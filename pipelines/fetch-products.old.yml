---

# This task is used in multiple jobs
# The yaml anchor "*prepare-tasks-with-secrets" is used in its place
prepare-tasks-with-secrets: &prepare-tasks-with-secrets
  image: platform-automation-image
  file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
  params:
    VARS_PATHS: vars/vars
    CONFIG_PATHS: config/download-product
  input_mapping:
    tasks: platform-automation-tasks
    config: configuration
    vars: configuration
  output_mapping:
    tasks: platform-automation-tasks

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: latest
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final

resources:
  - name: daily-ci
    type: time
    source:
      start: 1:00 AM
      stop: 2:00 AM
      location: America/Chicago

  - name: configuration
    type: git
    source:
      private_key: ((git.private_key))
      username: ((git.user.username))
      password: ((git.user.password))
      uri: ((git.configuration.uri))
      branch: master

  - name: platform-automation-pivnet
    type: pivnet
    source:
      api_token: ((pivnet_token))
      product_slug: platform-automation
      product_version: ^\d+\.\d+\.\d+
      sort_by: semver

  - name: platform-automation-image
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.platform_automation))
      regexp: .*image-(.*).tgz

  - name: platform-automation-tasks
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.platform_automation))
      regexp: .*tasks-(.*).zip

  - name: pas-product
    type: s3
    source:
      access_key_id: ((s3.access_key_id))
      bucket: ((s3.buckets.products))
      region_name: ((s3.region_name))
      secret_access_key: ((s3.secret_access_key))
      regexp: \[elastic-runtime,(.*)\]cf-.*.pivotal

  - name: pas-stemcell
    type: s3
    source:
      access_key_id: ((s3.access_key_id))
      bucket: ((s3.buckets.products))
      region_name: ((s3.region_name))
      secret_access_key: ((s3.secret_access_key))
      regexp: pas-stemcell/\[stemcells-ubuntu-xenial,(.*)\]bosh-stemcell-.*-vsphere.*\.tgz

  - name: pks-product
    type: s3
    source:
      access_key_id: ((s3.access_key_id))
      bucket: ((s3.buckets.products))
      region_name: ((s3.region_name))
      secret_access_key: ((s3.secret_access_key))
      regexp: \[pivotal-container-service,(.*)\]pivotal-container-service-.*.pivotal

  - name: pks-stemcell
    type: s3
    source:
      access_key_id: ((s3.access_key_id))
      bucket: ((s3.buckets.products))
      region_name: ((s3.region_name))
      secret_access_key: ((s3.secret_access_key))
      regexp: pks-stemcell/\[stemcells-ubuntu-xenial,(.*)\]bosh-stemcell-.*-vsphere.*\.tgz

jobs:
  - name: fetch-auto
    plan:
      - get: platform-automation-pivnet
      - put: platform-automation-tasks
        params:
          file: platform-automation-pivnet/*tasks*.zip
      - put: platform-automation-image
        params:
          file: platform-automation-pivnet/*image*.tgz
  - name: fetch-pas
    plan:
      - aggregate:
          #    - get: daily-ci
          #      trigger: true
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
          - get: product-config-pas
      - file: platform-automation-tasks/tasks/credhub-interpolate.yml
        image: platform-automation-image
        input_mapping:
          files: configuration
        params:
          CREDHUB_CA_CERT: ((credhub_ca_cert))
          CREDHUB_CLIENT: ((credhub_username))
          CREDHUB_SECRET: ((credhub_password))
          CREDHUB_SERVER: ((credhub_url))
          INTERPOLATION_PATHS: gcp-tinderbox/config gcp-tinderbox/env gcp-tinderbox/vars
          PREFIX: /concourse/gcp-tinderbox
        task: credhub-interpolate
      - task: download-pas-product-and-stemcell
        image: platform-automation-image
        file: platform-automation-tasks/tasks/download-product.yml
        params:
          CONFIG_FILE: semver-config.yaml
          VARS_FILES: vars/gcp-tinderbox/config/global.yml
        input_mapping:
          config: product-config-pas
          vars: interpolated-files
        output_mapping: {downloaded-stemcell: pas-stemcell}
      - aggregate:
          - put: pas-product
            params:
              file: downloaded-product/*.pivotal
          - put: pas-stemcell
            params:
              file: pas-stemcell/*.tgz
  - name: fetch-pks
    plan:
      - aggregate:
          #    - get: daily-ci
          #      trigger: true
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
          - get: product-config-pks
      - file: platform-automation-tasks/tasks/credhub-interpolate.yml
        image: platform-automation-image
        input_mapping:
          files: configuration
        params:
          CREDHUB_CA_CERT: ((credhub_ca_cert))
          CREDHUB_CLIENT: ((credhub_username))
          CREDHUB_SECRET: ((credhub_password))
          CREDHUB_SERVER: ((credhub_url))
          INTERPOLATION_PATHS: gcp-tinderbox/config gcp-tinderbox/env gcp-tinderbox/vars
          PREFIX: /concourse/gcp-tinderbox
        task: credhub-interpolate
      - task: download-pks-product-and-stemcell
        image: platform-automation-image
        file: platform-automation-tasks/tasks/download-product.yml
        params:
          CONFIG_FILE: semver-config.yaml
          VARS_FILES: vars/gcp-tinderbox/config/global.yml
        input_mapping:
          config: product-config-pks
          vars: interpolated-files
        output_mapping: {downloaded-stemcell: pks-stemcell}
      - aggregate:
          - put: pks-product
            params:
              file: downloaded-product/*.pivotal
          - put: pks-stemcell
            params:
              file: pks-stemcell/*.tgz